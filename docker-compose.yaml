#Borramos todas las imagenes
#docker image prune -a

# docker-compose up --help

#Docker hub
#Creamos un nombre exavto a lo que ncsitamos en docker hub para subir la imagen
#docker tag microservicio_blank_msvc-usuarios saymonset/usuarios
#docker push  saymonset/usuarios

#Instalando docker en la maquina aws
#sudo amazon-linux-extras install docker

#sudo service docker start
#docker version

#  Seccion 13 -> 103. Instalar docker y doker compose en aws. Gu√≠a Completa de Docker & Kubernetes con Spring Boot 2023

#  #
#
#  https://docs.docker.com/compose/install/linux/#install-the-plugin-manually
#
#Nos copiamos esta url hasta el o

#  #Instalamos en la maquina remota
#
#  sudo curl -SL https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
#
#
#  #Damos permisos de ejewcucion
#
#  sudo chmod +x /usr/local/bin/docker-compose
#
#  #Creamos un enlace para que sea global y no solo al usuario que hizo la instalacion
#
#  sudo ln /usr/local/bin/docker-compose /usr/bin/docker-compose

version: "3.9"
services:
  mysql8:
    # Con este container_name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    container_name: mysql8
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: msvc_usuarios
    volumes:
      - data-mysql:/var/lib/mysql
    restart: always
    networks:
      - spring
  postgres14:
    # Con este container_name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: msvc_cursos
    volumes:
      - data-postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - spring

  msvc-usuarios:
    # Con este container_name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    container_name: msvc-usuarios
    image: saymonset/usuarios:latest
    #Construimos la imagen con el Dockerfile que construimos manualmente
#    build:
#      # El contexto es el lugar de partida, donde se copian los archivos etc
#      context: ./
#      dockerfile: ./msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    environment:
      PORT: 8001
      DB_HOST: mysql8:3306
      DB_DATABASE: msvc_usuarios
      DB_USERNAME: root
      DB_PASSWORD: 123456
      CURSOS_URL: msvc-cursos:8002
    networks:
      - spring
    depends_on:
      - mysql8
    restart: always

  msvc-cursos:
    # Con este container_name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    container_name: msvc-cursos
    image: saymonset/cursos:latest
#    build:
#      # El contexto es el lugar de partida, donde se copian los archivos etc
#      context: ./
#      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    environment:
      PORT: 8002
      DB_HOST: postgres14:5432
      DB_DATABASE: msvc_cursos
      DB_USERNAME: postgres
      DB_PASSWORD: 123456
      USUARIOS_URL: msvc-usuarios:8001
    networks:
      - spring
    depends_on:
      - postgres14
      - msvc-usuarios
    restart: always
volumes:
  data-mysql:
    # Con este name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    name: data-mysql
  data-postgres:
    # Con este name, obligamos que el nombre se llame exactamente igual sin colocar un prefijo por default
    name: data-postgres

networks:
  spring:
    name: spring