#down the services
#docker-compose -f docker-compose.yml down

#run the services
#docker-compose -f docker-compose.yml up --build -d

#docker exec -it survey-all_mysql_ecolo_container_1 bash
#fix ERROR: for jbpm-docker_jbpm_1  Cannot start service jbpm: network f88f8c78153ab59ef2a4e2ae1651b717d0a7c5e374f13ce12a3726f0ee1cd774 not found
#docker-compose -f jbpm-full-mysql.yml down
# and again docker-compose -f jbpm-full-mysql.yml up --build -d

#remove all volume
#docker volume ls -qf dangling=true | xargs -r docker volume rm
#docker stop $(docker ps -a -q)
# docker-compose down
# docker-compose up --build -d
# docker stop $(docker ps -a -q)

#Remove all containers
# docker rm $(docker ps -a -q)

#Elimina todos los contenedores
#docker container prune#

# docker inspect main_mysql_ecolo_container_1
# docker volume ls

#  docker-compose restart
# docker-compose --help
# docker tag jumpnjibe_eco:0.1 saymonset/jumpnjibe_eco:0.1
# docker push saymonset/jumpnjibe_eco:0.1
#docker tag express_eco:0.1 saymonset/express_eco:0.1
#docker logs -f <CONTAINER>
# UPDATE
# docker login
# docker push saymonset/express_eco:0.1

#Subir file to DigitalOcean from my local
#rsync -avz /opt/workspace_angular/main/survey-back-front-cli-together/docker-compose.yml root@165.227.200.70:/root/ecologicalpaper
#rsync -avz /opt/workspace_angular/new/survey-all/docker-compose.yml root@165.227.200.70:/root/ecologicalpaper

#docker tag back_eco:0.1 saymonset/back_eco:0.1
# docker push saymonset/back_eco:0.1
# mysql -uroot -p123456

#docker tag front_eco:0.1 saymonset/front_eco:0.1
#docker tag front_eco:0.1 saymonset/front_eco:0.1
#docker exec -it survey-all_mysql_ecolo_container_1 bash

#Fix ERROR: Pool overlaps with other one on this address space
#docker network ls -q | xargs docker network rm

# Define the services/containers to be run
#Search a word into folder
#grep -R "saymon1_1.0.0-SNAPSHOT" wildfly/
version: '2'
services:
  # pg es el nombre del contenedor o host para comunicarse con la bd
  pg:
    image: postgres:latest
    volumes:
      - /var/lib/postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: msvc_cursos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456

      # depends_on:
      # - mongo_ecolo_container
      # Required environment variables.  Creates a Database with a
    # root user, non-root user both with passwords.
    #
    # MYSQL_ROOT_PASSWORD defines the root password of the root user
    # MYSQL_DATABASE names the DB
    # MYSQL_USER is the non-root user
    # MYSQL_PASSWORD is the non-root user password

    # place just for this particular dockerized MySQL instance.

#      Cliente WorkBench de Mysql
#      docker run -d --name=mysql-workbench -e PUID=1000 -e PGID=1000 -e TZ=Europe/London -p 3000:3000 --network spring -v /path/to/config:/config --cap-add="IPC_LOCK" --restart unless-stopped lscr.io/linuxserver/mysql-workbench:latest

 #docker run -p 5432:5432 --name pg --network spring -e POSTGRES_PASSWORD=123456 -e POSTGRES_DB=msvc_cursos -d postgres:14-alpine